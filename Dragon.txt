local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()
local Window = OrionLib:MakeWindow({Name = "Title of the library", HidePremium = false, SaveConfig = true, ConfigFolder = "OrionTest"})
local Tab = Window:MakeTab({
	Name = "Tab 1",
	Icon = "rbxassetid://4483345998",
	PremiumOnly = false
})
local Section = Tab:AddSection({
	Name = "Section"
})
OrionLib:MakeNotification({
	Name = "Title!",
	Content = "Notification content... what will it say??",
	Image = "rbxassetid://4483345998",
	Time = 5
})
Tab:AddButton({
    Name = "Start AutoFight",
    Callback = function()
        -- Start the main logic when the button is pressed
        pcall(function()
            local enemies = game:GetService("Workspace").Enemies
            local replicatedStorage = game:GetService("ReplicatedStorage")
            local cakePrince = enemies:FindFirstChild("Cake Prince [Lv. 2300] [Raid Boss]")
            
            -- Check if the Cake Prince exists in the workspace or replicated storage
            if cakePrince then
                for _, v in pairs(enemies:GetChildren()) do
                    if v.Name == "Cake Prince [Lv. 2300] [Raid Boss]" then
                        if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                            repeat
                                task.wait()
                                AutoHaki()
                                EquipWeapon(_G.SelectWeapon)
                                v.HumanoidRootPart.CanCollide = false
                                v.Humanoid.WalkSpeed = 0
                                v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                topos(v.HumanoidRootPart.CFrame * CFrame.new(2,10,5))
                                game:GetService("VirtualUser"):CaptureController()
                                game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                sethiddenproperty(game.Players.LocalPlayer, "SimulationRadius", math.huge)
                            until not _G.AutoDoughtBoss or not v.Parent or v.Humanoid.Health <= 0
                        end
                    end
                end
            else
                -- If Cake Prince doesn't exist, check ReplicatedStorage or spawn it
                if replicatedStorage:FindFirstChild("Cake Prince [Lv. 2300] [Raid Boss]") then
                    topos(replicatedStorage:FindFirstChild("Cake Prince [Lv. 2300] [Raid Boss]").HumanoidRootPart.CFrame * CFrame.new(2,20,2))
                else
                    if KillMob == 0 then
                        replicatedStorage.Remotes.CommF_:InvokeServer("CakePrinceSpawner", true)
                    end
                end

                -- Check for other enemies like Cookie Crafter, Cake Guard, Baking Staff, etc.
                if game:GetService("Workspace").Map.CakeLoaf.BigMirror.Other.Transparency == 1 then
                    if enemies:FindFirstChild("Cookie Crafter [Lv. 2200]") or enemies:FindFirstChild("Cake Guard [Lv. 2225]") or enemies:FindFirstChild("Baking Staff [Lv. 2250]") or enemies:FindFirstChild("Head Baker [Lv. 2275]") then
                        for _, v in pairs(enemies:GetChildren()) do
                            if v.Name == "Cookie Crafter [Lv. 2200]" or v.Name == "Cake Guard [Lv. 2225]" or v.Name == "Baking Staff [Lv. 2250]" or v.Name == "Head Baker [Lv. 2275]" then
                                if v:FindFirstChild("Humanoid") and v:FindFirstChild("HumanoidRootPart") and v.Humanoid.Health > 0 then
                                    repeat
                                        task.wait()
                                        AutoHaki()
                                        EquipWeapon(_G.SelectWeapon)
                                        v.HumanoidRootPart.CanCollide = false
                                        v.Humanoid.WalkSpeed = 0
                                        v.Head.CanCollide = false
                                        v.HumanoidRootPart.Size = Vector3.new(50,50,50)
                                        MagnetDought = true
                                        PosMonDoughtOpenDoor = v.HumanoidRootPart.CFrame
                                        topos(v.HumanoidRootPart.CFrame * CFrame.new(2,10,5))
                                        game:GetService("VirtualUser"):CaptureController()
                                        game:GetService("VirtualUser"):Button1Down(Vector2.new(1280,672))
                                    until not _G.AutoDoughtBoss or not v.Parent or v.Humanoid.Health <= 0 or game:GetService("Workspace").Map.CakeLoaf.BigMirror.Other.Transparency == 0
                                    or replicatedStorage:FindFirstChild("Cake Prince [Lv. 2300] [Raid Boss]") or enemies:FindFirstChild("Cake Prince [Lv. 2300] [Raid Boss]") or KillMob == 0
                                end
                            end
                        end
                    else
                        MagnetDought = false
                        if replicatedStorage:FindFirstChild("Cookie Crafter [Lv. 2200]") then
                            topos(replicatedStorage:FindFirstChild("Cookie Crafter [Lv. 2200]").HumanoidRootPart.CFrame * CFrame.new(2,20,2)) 
                        elseif replicatedStorage:FindFirstChild("Cake Guard [Lv. 2225]") then
                            topos(replicatedStorage:FindFirstChild("Cake Guard [Lv. 2225]").HumanoidRootPart.CFrame * CFrame.new(2,20,2)) 
                        elseif replicatedStorage:FindFirstChild("Baking Staff [Lv. 2250]") then
                            topos(replicatedStorage:FindFirstChild("Baking Staff [Lv. 2250]").HumanoidRootPart.CFrame * CFrame.new(2,20,2))
                        elseif replicatedStorage:FindFirstChild("Head Baker [Lv. 2275]") then
                            topos(replicatedStorage:FindFirstChild("Head Baker [Lv. 2275]").HumanoidRootPart.CFrame * CFrame.new(2,20,2))
                        end
                    end
                end
            end
        end)
    end    
})
